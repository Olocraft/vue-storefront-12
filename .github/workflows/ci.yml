name: CI
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  cache:
    name: Create cache for all steps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable

  commit-lint:
    name: Validate PR Title (conventional-commit)
    needs: [cache]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - uses: JulienKode/pull-request-name-linter-action@v0.1.2

  lint:
    name: Lint
    needs: [cache]
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Run linters
        run: yarn lint

  build:
    name: Build Nuxt, Next, Docs
    needs: [cache, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Run build
        run: yarn build

  build-release:
    name: Build packages for release
    needs: [cache, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --immutable
      - name: Run build
        run: yarn build:release
  # test:
  #   name: Jest tests
  #   runs-on: ubuntu-latest
  #   needs: [cache]
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     - name: Configure Yarn cache
  #       uses: actions/cache@v2
  #       with:
  #         key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('./yarn.lock') }}
  #         path: |
  #           ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #           apps/preview/nuxt/node_modules

  #     - name: Install dependencies
  #       run: cd apps/preview/nuxt; yarn --prefer-offline --pure-lockfile

  #     - name: Run tests with coverage
  #       run: cd apps/preview/nuxt; yarn test

  #     - name: Upload coverage report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: coverage-report
  #         path: apps/preview/nuxt/coverage/
